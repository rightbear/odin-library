*  {
    margin: 0;  
    padding: 0;
    box-sizing: border-box;
}

/*************************************/

.main {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.add-region {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    height: 20vh;
    width: 40vw;
    gap: 10px;

    background-color: bisque;
}

.add-region > dialog {
    margin:auto;
}

/*************************************/

dialog {
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

::backdrop {
    background-image: linear-gradient(
      45deg,
      grey
    );
    opacity: 0.75;
}

/* Open state of the dialog  */
dialog:open {
    opacity: 1;
    transform: scaleY(1);
  }
  
  /* Closed state of the dialog   */
  dialog {
    opacity: 0;
    transform: scaleY(0);
    transition:
      opacity 0.7s ease-out,
      transform 0.7s ease-out,
      overlay 0.7s ease-out allow-discrete,
      display 0.7s ease-out allow-discrete;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
  }
  
  /* Before open state  */
  /* Needs to be after the previous dialog:open rule to take effect,
      as the specificity is the same */
  @starting-style {
    dialog:open {
      opacity: 0;
      transform: scaleY(0);
    }
  }
  
  /* Transition the :backdrop when the dialog modal is promoted to the top layer */
  dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition:
      display 0.7s allow-discrete,
      overlay 0.7s allow-discrete,
      background-color 0.7s;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
  }
  
  dialog:open::backdrop {
    background-color: rgb(0 0 0 / 25%);
  }
  
  /* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */
  
  @starting-style {
    dialog:open::backdrop {
      background-color: rgb(0 0 0 / 0%);
    }
  }

/*************************************/

  table {
    border-collapse: collapse;
  }

  td,
  th {
    border: 1px solid black;
    padding: 10px 20px;
  }
  